{"version":3,"sources":["API/axios.js","components/Row.js","API/requests.js","components/Banner.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","base_url","Row","_ref","title","fetchUrl","isLargeRow","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","_useState3","_useState4","trailerUrl","setTrailerUrl","useEffect","_fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","request","wrap","_context","prev","next","get","sent","data","results","abrupt","stop","apply","this","arguments","fetchData","handleClick","_ref2","_callee2","movie","_context2","movieTrailer","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","_x","react_default","createElement","className","map","onClick","key","id","concat","src","poster_path","backdrop_path","alt","name","index_esm","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRoamanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","overview","substr","Navbar","show","setShow","window","addEventListener","scrollY","removeEventListener","App","components_Navbar","components_Banner","components_Row","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d9bd3ff5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import movieTrailer from \"movie-trailer\";\nimport React, { useEffect, useState } from \"react\";\nimport YouTube from \"react-youtube\";\nimport axios from \"../API/axios\";\nimport \"./css/Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n\n  const handleClick =  async (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(movie.original_name)\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map((movie) => (\n          <img\n            onClick={() => {\n              handleClick(movie);\n            }}\n            key={movie.id}\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n            src={`${base_url}${\n              isLargeRow ? movie.poster_path : movie.backdrop_path\n            }`}\n            alt={movie.name}\n          />\n        ))}\n      </div>\n      {trailerUrl && (\n        <YouTube videoId={trailerUrl} opts={opts} className=\"youtube__video\" />\n      )}\n    </div>\n  );\n}\n\nexport default Row;\n","const API_KEY = \"9f0bace1a7c42be4ec53dff0f4d6d74d\";\n\nconst requests = {\n  fetchTrending : `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals : `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated : `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies : `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies : `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies : `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRoamanceMovies : `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries : `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React, { useEffect, useState } from \"react\";\nimport axios from \"../API/axios\";\nimport requests from \"../API/requests\";\nimport \"./css/Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  function truncate(str, n) {\n    return str && str.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie && movie.backdrop_path})`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">{movie.name}</h1>\n        <p className=\"banner__description\">{truncate(movie.overview , 150)}</p>\n        <div className=\"banner__buttons\">\n          <button className=\"banner__button\"> <i className=\"fas fa-play\"/> Play</button>\n          <button className=\"banner__button\"><i className=\"fas fa-info-circle\"/> More Info</button>\n        </div>\n      </div>\n\n      <div className=\"banner--fadeBottom\"/>\n    </header>\n  );\n}\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport \"./css/Navbar.css\";\n\nfunction Navbar() {\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 50) {\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n\n  return (\n    <div className={`nav ${show && \"nav__black\"}`}>\n      <img\n        className=\"nav__logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/340px-Netflix_2015_logo.svg.png\"\n        alt=\"Netlix Logo\"\n      />\n      <img className=\"nav__avtar\" src=\"user-icon.png\" alt=\"User Logo\" />\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport Row from \"./components/Row\";\nimport Banner from \"./components/Banner\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport requests from \"./API/requests\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Banner/>\n      <Row title=\"Popular on Netflix\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true} />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRoamanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}